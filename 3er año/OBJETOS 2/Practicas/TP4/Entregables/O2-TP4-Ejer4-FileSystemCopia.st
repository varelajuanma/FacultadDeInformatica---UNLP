Object subclass: #Contenido	instanceVariableNames: 'nombre fechaDeCreacion'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem-Model'!!Contenido methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:14'!nombre: unNombre fechaDeCreacion: unaFecha	nombre := unNombre.	fechaDeCreacion := unaFecha ! !!Contenido methodsFor: 'accessing' stamp: 'Anonymous 5/28/2020 09:39'!fechaDeCreacion^fechaDeCreacion ! !!Contenido methodsFor: 'accessing' stamp: 'Anonymous 6/9/2020 21:30'!nombre^nombre! !Contenido subclass: #Archivo	instanceVariableNames: 'tamano'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem-Model'!!Archivo methodsFor: 'accessing' stamp: 'Anonymous 5/28/2020 18:07'!tamano	^ tamano! !!Archivo methodsFor: 'accessing' stamp: 'Anonymous 5/28/2020 18:07'!tamano: unTamañoEnBytes	tamano := unTamañoEnBytes! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/29/2020 09:44'!sumar	^ 1! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:01'!agregarAListadoConIndentacion: aNumber	^ String new! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:07'!tamanoTotalOcupado	^ tamano! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 13:47'!todosLosArchivos	| listaConUnSoloArchivo |	listaConUnSoloArchivo := OrderedCollection new.	listaConUnSoloArchivo add: self.	^ listaConUnSoloArchivo! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 17:50'!listadoDeContenido	^ ''! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Archivo class	instanceVariableNames: ''!!Archivo class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:11'!llamado: unString creadoEl: unaFecha kBytes: unNumero	"Método de clase. Crea un nuevo archivo con nombre unString, de unNumero kBytes yen la fecha unaFecha."	^ self new		nombre: unString fechaDeCreacion: unaFecha;		tamano: unNumero;		yourself! !Contenido subclass: #Directorio	instanceVariableNames: 'contenidos tamañoInicial'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem-Model'!!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/10/2020 11:23'!tamanoTotalOcupado	"Retorna el espacio total ocupado en KB, incluyendo su contenido."	^ self todosLosArchivos sum: [ :cont | cont tamano + self tamañoInicial ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/29/2020 09:44'!agregarCantidadDeArchivos	| cantArchivos |	cantArchivos := 0.	contenidos do: [ :c | cantArchivos := cantArchivos + c sumar ].	cantArchivos > 0		ifTrue: [ ^ ' (' , cantArchivos asString , ' archivos)' ]		ifFalse: [ ^ '' ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/29/2020 09:44'!sumar	^ 0! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 12:34'!agregar: unContenido	contenidos add: unContenido! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/9/2020 21:08'!listadoDeContenido	"Retorna un string con el listado del contenido del directorio imprimiendo el path completo de cada elemento (similar al comando pwd de linux) siguiendo el modelo presentado a continuación:/Directorio A/Directorio A/Directorio A.1/Directorio A/Directorio A.1/Directorio A.1.1 (3 archivos)/Directorio A/Directorio A.1/Directorio A.1.2 (2 archivos)/Directorio A/Directorio A.2/Directorio B"	^ self listadoDeContenidoIndentado: 1! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:16'!archivoMasGrande	"Retorna el archivo con mayor cantidad de bytes en cualquier nivel del filesystemcontenido por directorio receptor."	| coleccionOrdenadaPorPeso |	coleccionOrdenadaPorPeso := self todosLosArchivos 		asSortedCollection: [ :a :b | a tamano > b tamano ].	coleccionOrdenadaPorPeso isEmpty		ifTrue: [ ^ false ]		ifFalse: [ ^ coleccionOrdenadaPorPeso at: 1 ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/9/2020 21:13'!listadoDeContenidoIndentado: aNumber	^ (self agregarRaizIndentada: aNumber)		, self agregarCantidadDeArchivos		, (self agregarSubdirectoriosIndentados: aNumber + 1)! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/9/2020 21:31'!agregarAListadoConIndentacion: aNumber	^ Character cr asString, (self listadoDeContenidoIndentado: aNumber)! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:16'!archivoMasNuevo	"Retorna el archivo con fecha de creacion más reciente en cualquier nivel delfilesystem contenido por directorio receptor."	| coleccionOrdenadaPorFecha |	coleccionOrdenadaPorFecha := self todosLosArchivos 		asSortedCollection: [ :a :b | a fechaDeCreacion > b fechaDeCreacion ].	coleccionOrdenadaPorFecha isEmpty		ifTrue: [ ^ false ]		ifFalse: [ ^ coleccionOrdenadaPorFecha at: 1 ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/9/2020 21:27'!agregarSubdirectoriosIndentados: aNumber	| subdirectorios |	subdirectorios := String new.	contenidos		do: [ :c | 			subdirectorios := subdirectorios				, (c agregarAListadoConIndentacion: aNumber) ].	^ subdirectorios! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 18:22'!todosLosArchivos	| listaDeArchivos |	listaDeArchivos := contenidos		flatCollect: [ :cont | cont todosLosArchivos ].	^ listaDeArchivos! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/9/2020 21:19'!agregarRaizIndentada: aNumber	| raiz |	raiz := String new.	aNumber timesRepeat: [ raiz := raiz , '/' ].	raiz := raiz,nombre.	^ raiz! !!Directorio methodsFor: 'accessing' stamp: 'Anonymous 5/28/2020 10:55'!tamañoInicial	^ tamañoInicial ! !!Directorio methodsFor: 'accessing' stamp: 'Anonymous 5/28/2020 09:24'!contenidos^contenidos ! !!Directorio methodsFor: 'initialization' stamp: 'Anonymous 5/29/2020 09:34'!initialize	super initialize.	contenidos := OrderedCollection new.	tamañoInicial := 32! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Directorio class	instanceVariableNames: ''!!Directorio class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/28/2020 09:15'!llamado: unString creadoEl: unaFecha	"Método de clase. Crea un nuevo Directorio con nombre unString y en la fechaunaFecha."	^ self new		nombre: unString fechaDeCreacion: unaFecha;		yourself! !TestCase subclass: #DirectorioTest	instanceVariableNames: 'vacio conUnArchivo conVariosArchivos conSubdirectorios config grande backup2015'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem-Test'!!DirectorioTest methodsFor: 'tests' stamp: 'Anonymous 5/28/2020 18:06'!testArchivoMasGrande	self assert: conSubdirectorios archivoMasGrande tamano equals: 240000000! !!DirectorioTest methodsFor: 'tests' stamp: 'Anonymous 5/28/2020 18:13'!testArchivoMasNuevo	self assert: conSubdirectorios archivoMasNuevo equals: backup2015! !!DirectorioTest methodsFor: 'tests' stamp: 'Anonymous 6/10/2020 11:24'!testTamanoTotalOcupado	self assert: conSubdirectorios tamanoTotalOcupado equals: 256690288! !!DirectorioTest methodsFor: 'running' stamp: 'Anonymous 5/28/2020 18:02'!testListadoDeContenido	| listado listadoStream |	self assert: vacio listadoDeContenido equals: '/home'.	self		assert: conUnArchivo listadoDeContenido		equals: '/var (1 archivos)'.	self		assert: conVariosArchivos listadoDeContenido		equals: '/tmp (4 archivos)'.	listadoStream := WriteStream on: String new.	listadoStream		<< '/log (1 archivos)';		cr.	listadoStream		<< '/log/mysql (4 archivos)';		cr.	listadoStream		<< '/log/mysql/older (1 archivos)';		cr.	listadoStream << '/log/postgres (3 archivos)'.	listado := listadoStream contents.	self assert: conSubdirectorios listadoDeContenido equals: listado! !!DirectorioTest methodsFor: 'running' stamp: 'Anonymous 6/9/2020 21:01'!setUp	| date |	date := '2015-01-01'.	"Directorio vacío"	vacio := Directorio llamado: 'home' creadoEl: date.	"Directorio con un solo archivo"	conUnArchivo := Directorio llamado: 'var' creadoEl: date.	config := Archivo		llamado: 'config.bak'		creadoEl: '2016-04-02' asDate		kBytes: 128.	conUnArchivo agregar: config.	"Directorio con varios archivos, pero sin subdirectorios"	conVariosArchivos := Directorio llamado: 'tmp' creadoEl: date.	grande := Archivo		llamado: 'grande.tmp'		creadoEl: '2016-04-02' asDate		kBytes: 2000000.	conVariosArchivos		agregar: (Archivo llamado: 'nada.tmp' creadoEl: '2015-05-01' asDate kBytes: 0);		agregar:			(Archivo llamado: 'chico.tmp' creadoEl: '2013-06-03' asDate kBytes: 10);		agregar: grande;		agregar:			(Archivo				llamado: 'mediano.tmp'				creadoEl: '1995-11-23' asDate				kBytes: 10000).	"Directorio con subdirectorios, archivos, y archivos dentro de los subdirectorios"	conSubdirectorios := Directorio llamado: 'log' creadoEl: date.	backup2015 := Archivo		llamado: '2015.zip'		creadoEl: '2016-04-06' asDate		kBytes: 240000000.	conSubdirectorios		agregar:			(Archivo				llamado: 'sys.log'				creadoEl: '2016-03-03' asDate				kBytes: 90000);		agregar:			((Directorio llamado: 'mysql' creadoEl: date)				agregar:					(Archivo						llamado: 'mysql01.log'						creadoEl: '2015-12-03' asDate						kBytes: 1200000);				agregar:					(Archivo						llamado: 'mysql02.log'						creadoEl: '2014-03-03' asDate						kBytes: 2000000);				agregar:					(Archivo						llamado: 'mysql03.log'						creadoEl: '2013-03-21' asDate						kBytes: 2000000);				agregar:					(Archivo						llamado: 'mysql04.log'						creadoEl: '2014-07-15' asDate						kBytes: 2000000);				agregar:					((Directorio llamado: 'older' creadoEl: date)						agregar: backup2015;						yourself);				yourself);		agregar:			((Directorio llamado: 'postgres' creadoEl: date)				agregar:					(Archivo						llamado: 'pg01.log'						creadoEl: '2015-04-12' asDate						kBytes: 1400000);				agregar:					(Archivo						llamado: 'pg02.log'						creadoEl: '2016-03-08' asDate						kBytes: 4000000);				agregar:					(Archivo						llamado: 'pg03.log'						creadoEl: '2016-02-13' asDate						kBytes: 4000000);				yourself)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DirectorioTest class	instanceVariableNames: ''!!DirectorioTest class methodsFor: 'as yet unclassified' stamp: 'DiegoT 5/18/2020 18:00'!llamado: nombre creadoEl: date^ self new initialize:nombre creado: date.! !