Object subclass: #Contenido	instanceVariableNames: 'nombre fechaDeCreacion'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem'!!Contenido methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:02'!nombre: unNombre fechaDeCreacion: unaFecha	nombre := unNombre.	fechaDeCreacion := unaFecha ! !!Contenido methodsFor: 'accessing' stamp: 'Anonymous 6/11/2020 19:02'!fechaDeCreacion^fechaDeCreacion ! !!Contenido methodsFor: 'accessing' stamp: 'Anonymous 6/11/2020 19:02'!nombre^nombre! !Contenido subclass: #Archivo	instanceVariableNames: 'tamaño'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem'!!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:42'!sumar^ 1! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 20:08'!todosLosArchivos	| listaConUnSoloArchivo |	listaConUnSoloArchivo := OrderedCollection new.	listaConUnSoloArchivo add: self.	^ listaConUnSoloArchivo! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 20:13'!tamañoTotalOcupado	^ tamaño! !!Archivo methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/12/2020 17:44'!agregarContenidoA: unListado seguidoDe: path	^ String new! !!Archivo methodsFor: 'accessing' stamp: 'Anonymous 6/11/2020 19:07'!tamaño: unTamañotamaño := unTamaño ! !!Archivo methodsFor: 'accessing' stamp: 'Anonymous 6/11/2020 20:14'!tamaño^tamaño! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Archivo class	instanceVariableNames: ''!!Archivo class methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:09'!llamado: unString creadoEl: unaFecha kBytes: unNumero"Método de clase. Crea un nuevo archivo con nombre unString, de unNumero kBytes yen la fecha unaFecha."^ self new nombre: unString fechaDeCreacion: unaFecha;tamaño: unNumero; yourself ! !Contenido subclass: #Directorio	instanceVariableNames: 'contenidos tamañoInicial'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem'!!Directorio methodsFor: 'accessing' stamp: 'Anonymous 6/11/2020 20:15'!tamañoInicial^tamañoInicial ! !!Directorio methodsFor: 'accessing' stamp: 'Anonymous 6/11/2020 19:11'!contenidos^ contenidos ! !!Directorio methodsFor: 'initialization' stamp: 'Anonymous 6/12/2020 17:38'!initialize	super initialize.	contenidos := OrderedCollection new.	tamañoInicial := 32.! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/12/2020 17:45'!agregarContenidoA: unListado seguidoDe: pathAnterior	| path |	unListado << Character cr asString.	path := pathAnterior , self agregarRaiz .	unListado << path.	unListado << self agregarCantidadDeArchivos.	contenidos		do:			[ :component | component agregarContenidoA: unListado seguidoDe: path ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:53'!agregarCantidadDeArchivos	| cantArchivos |	cantArchivos := 0.	contenidos do: [ :c | cantArchivos := cantArchivos + c sumar ].	cantArchivos > 0		ifTrue: [ ^ ' (' , cantArchivos asString , ' archivos)' ]		ifFalse: [ ^ '' ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:43'!sumar^ 0! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:18'!agregar: unContenidocontenidos add: unContenido ! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/12/2020 17:43'!listadoDeContenido	"Retorna un string con el listado del contenido del directorio imprimiendo elpath completo de cada elemento (similar al comando pwd de linux) siguiendo elmodelo presentado a continuación:/Directorio A/Directorio A/Directorio A.1/Directorio A/Directorio A.1/Directorio A.1.1 (3 archivos)/Directorio A/Directorio A.1/Directorio A.1.2 (2 archivos)/Directorio A/Directorio A.2/Directorio B"	| listadoStream path |	listadoStream := WriteStream on: String new.	path := self agregarRaiz.	listadoStream << path.	listadoStream << self agregarCantidadDeArchivos.	contenidos		do:			[ :component | component agregarContenidoA: listadoStream seguidoDe: path ].	^ listadoStream contents! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/12/2020 10:36'!agregarRaiz	^ '/' , nombre! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 20:12'!tamañoTotalOcupado	"Retorna el espacio total ocupado en KB, incluyendo su contenido."	^ self todosLosArchivos		sum: [ :cont | cont tamaño + self tamañoInicial ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 20:16'!archivoMasGrande	"Retorna el archivo con mayor cantidad de bytes en cualquier nivel del filesystemcontenido por directorio receptor."		| coleccionOrdenadaPorPeso |	coleccionOrdenadaPorPeso := self todosLosArchivos		asSortedCollection: [ :a :b | a tamaño > b tamaño ].	coleccionOrdenadaPorPeso isEmpty		ifTrue: [ ^ false ]		ifFalse: [ ^ coleccionOrdenadaPorPeso at: 1 ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 20:16'!archivoMasNuevo	"retorna el archivo con fecha de creacion más reciente en cualquier nivel delfilesystem contenido por directorio receptor."		| coleccionOrdenadaPorFecha |	coleccionOrdenadaPorFecha := self todosLosArchivos		asSortedCollection: [ :a :b | a fechaDeCreacion > b fechaDeCreacion ].	coleccionOrdenadaPorFecha isEmpty		ifTrue: [ ^ false ]		ifFalse: [ ^ coleccionOrdenadaPorFecha at: 1 ]! !!Directorio methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 20:08'!todosLosArchivos	| listaDeArchivos |	listaDeArchivos := contenidos		flatCollect: [ :cont | cont todosLosArchivos ].	^ listaDeArchivos! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Directorio class	instanceVariableNames: ''!!Directorio class methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:10'!llamado: unString creadoEl: unaFecha"Método de clase. Crea un nuevo Directorio con nombre unString y en la fechaunaFecha."^self new nombre: unString  fechaDeCreacion: unaFecha ; yourself ! !TestCase subclass: #DirectorioTest	instanceVariableNames: 'vacio conUnArchivo conVariosArchivos conSubdirectorios config grande backup2015'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer4-FileSystem'!!DirectorioTest methodsFor: 'running' stamp: 'Anonymous 6/11/2020 19:01'!testListadoDeContenido	| listado listadoStream |	self assert: vacio listadoDeContenido equals: '/home'.	self		assert: conUnArchivo listadoDeContenido		equals: '/var (1 archivos)'.	self		assert: conVariosArchivos listadoDeContenido		equals: '/tmp (4 archivos)'.	listadoStream := WriteStream on: String new.	listadoStream		<< '/log (1 archivos)';		cr.	listadoStream		<< '/log/mysql (4 archivos)';		cr.	listadoStream		<< '/log/mysql/older (1 archivos)';		cr.	listadoStream << '/log/postgres (3 archivos)'.	listado := listadoStream contents.	self assert: conSubdirectorios listadoDeContenido equals: listado! !!DirectorioTest methodsFor: 'running' stamp: 'Anonymous 6/11/2020 20:49'!setUp	| date |	date := '2015-01-01'.	"Directorio vacío"	vacio := Directorio llamado: 'home' creadoEl: date.	"Directorio con un solo archivo"	conUnArchivo := Directorio llamado: 'var' creadoEl: date.	config := Archivo		llamado: 'config.bak'		creadoEl: '2016-04-02' asDate		kBytes: 128.	conUnArchivo agregar: config.	"Directorio con varios archivos, pero sin subdirectorios"	conVariosArchivos := Directorio llamado: 'tmp' creadoEl: date.	grande := Archivo		llamado: 'grande.tmp'		creadoEl: '2016-04-02' asDate		kBytes: 2000000.	conVariosArchivos		agregar: (Archivo llamado: 'nada.tmp' creadoEl: '2015-05-01' asDate kBytes: 0);		agregar:			(Archivo llamado: 'chico.tmp' creadoEl: '2013-06-03' asDate kBytes: 10);		agregar: grande;		agregar:			(Archivo				llamado: 'mediano.tmp'				creadoEl: '1995-11-23' asDate				kBytes: 10000).	"Directorio con subdirectorios, archivos, y archivos dentro de los subdirectorios"	conSubdirectorios := Directorio llamado: 'log' creadoEl: date.	backup2015 := Archivo		llamado: '2015.zip'		creadoEl: '2016-04-06' asDate		kBytes: 240000000.	conSubdirectorios		agregar:			(Archivo				llamado: 'sys.log'				creadoEl: '2016-03-03' asDate				kBytes: 90000);		agregar:			((Directorio llamado: 'mysql' creadoEl: date)				agregar:					(Archivo						llamado: 'mysql01.log'						creadoEl: '2015-12-03' asDate						kBytes: 1200000);				agregar:					(Archivo						llamado: 'mysql02.log'						creadoEl: '2014-03-03' asDate						kBytes: 2000000);				agregar:					(Archivo						llamado: 'mysql03.log'						creadoEl: '2013-03-21' asDate						kBytes: 2000000);				agregar:					(Archivo						llamado: 'mysql04.log'						creadoEl: '2014-07-15' asDate						kBytes: 2000000);				agregar:					((Directorio llamado: 'older' creadoEl: date)						agregar: backup2015;						yourself);				yourself);		agregar:			((Directorio llamado: 'postgres' creadoEl: date)				agregar:					(Archivo						llamado: 'pg01.log'						creadoEl: '2015-04-12' asDate						kBytes: 1400000);				agregar:					(Archivo						llamado: 'pg02.log'						creadoEl: '2016-03-08' asDate						kBytes: 4000000);				agregar:					(Archivo						llamado: 'pg03.log'						creadoEl: '2016-02-13' asDate						kBytes: 4000000);				yourself)! !!DirectorioTest methodsFor: 'tests' stamp: 'Anonymous 6/11/2020 19:01'!testArchivoMasNuevo	self assert: conSubdirectorios archivoMasNuevo equals: backup2015! !!DirectorioTest methodsFor: 'tests' stamp: 'Anonymous 6/12/2020 17:30'!testArchivoMasGrande	self assert: conSubdirectorios archivoMasGrande tamaño equals: 240000000! !!DirectorioTest methodsFor: 'tests' stamp: 'Anonymous 6/11/2020 20:14'!testTamañoTotalOcupado	self assert: conSubdirectorios tamañoTotalOcupado equals: 256690288! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DirectorioTest class	instanceVariableNames: ''!!DirectorioTest class methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/11/2020 19:01'!llamado: nombre creadoEl: date^ self new initialize:nombre creado: date.! !