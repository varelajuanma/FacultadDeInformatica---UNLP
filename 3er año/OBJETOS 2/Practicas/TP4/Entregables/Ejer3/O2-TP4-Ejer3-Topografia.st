TestCase subclass: #TopografiaTest	instanceVariableNames: 'topografia topografiaGrande'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer3-Topografia-Test'!!TopografiaTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:42'!testIgualTopografia	| topografiaIgual porcion1 porcion2 porcion3 porcion4 |	porcion1 := Agua new.	porcion2 := Tierra new.	porcion3 := Agua new.	porcion4 := Tierra new.	topografiaIgual := Mixta		crearConTop1: porcion1		Top2: porcion2		Top3: porcion3		Top4: porcion4.	self assert: (topografia esIgualA: topografiaIgual) equals: true! !!TopografiaTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:42'!testProporcionDeAgua	self assert: topografia proporcionDeAgua equals: (1 / 2).! !!TopografiaTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:42'!testProporcionDeTierra	self assert: topografia proporcionDeTierra equals: (1 / 2)! !!TopografiaTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:42'!testDiferenteTopografia	" En este caso se crea una topografia que tenga diferente la porcion2 y se comprueba que #esIgualA: devuelva falso"	| topografiaDiferente porcion1 porcion2 porcion3 porcion4 |	porcion1 := Tierra new.	porcion2 := Tierra new.	porcion3 := Agua new.	porcion4 := Tierra new.	topografiaDiferente := Mixta		crearConTop1: porcion1		Top2: porcion2		Top3: porcion3		Top4: porcion4.	self assert: (topografia esIgualA: topografiaDiferente) equals: false! !!TopografiaTest methodsFor: 'running' stamp: 'Anonymous 6/9/2020 20:41'!setUp	"Hooks that subclasses may override to define the fixture of test."		| porcion1 porcion2 porcion3 porcion4 |	porcion1 := Agua new.	porcion2 := Tierra new.	porcion3 := Agua new.	porcion4 := Tierra new.	topografia := Mixta crearConTop1: porcion1 Top2: porcion2 Top3: porcion3 Top4: porcion4.	topografiaGrande := Mixta		crearConTop1: Agua new		Top2: Tierra new		Top3: Agua new		Top4: topografia! !Object subclass: #Topografia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer3-Topografia-Model'!!Topografia methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/20/2020 17:28'!esIgualA: otraTopografia	self subclassResponsibility! !!Topografia methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/20/2020 17:29'!proporcionDeTierra	self subclassResponsibility! !!Topografia methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/20/2020 17:29'!proporcionDeAguaself subclassResponsibility! !!Topografia methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 11:39'!esIgualAMixta: otraTopografia	^ false! !!Topografia methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 11:39'!esIgualAAgua	^ false! !!Topografia methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 11:39'!esIgualATierra	^ false! !Topografia subclass: #Agua	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer3-Topografia-Model'!!Agua methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 17:51'!esIgualA: unaTopografia	^ unaTopografia esIgualAAgua! !!Agua methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 17:51'!proporcionDeTierra	^ 0! !!Agua methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 17:51'!proporcionDeAgua	^ 1! !!Agua methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 17:51'!esIgualAAgua	^ true! !Topografia subclass: #Mixta	instanceVariableNames: 'topografias'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer3-Topografia-Model'!!Mixta methodsFor: 'accessing' stamp: 'Anonymous 5/27/2020 17:58'!esIgualAMixta: otraTopografia" devuelve true si de 1 a 4 todas las topografias son iguales "	^ (1 to: self topografias size)		allSatisfy: [ :i | (self topografias at: i) esIgualA: (otraTopografia topografias at: i) ]! !!Mixta methodsFor: 'accessing' stamp: 'Anonymous 5/27/2020 17:58'!esIgualA: unaTopografia	^ unaTopografia esIgualAMixta: self! !!Mixta methodsFor: 'accessing' stamp: 'Anonymous 6/22/2020 16:57'!proporcionDeAgua	"Suma las proporciones de agua de todas sus topografias y las divide por la cantidad de topografias que la forman (4 de momento)"	^ (topografiassum:			[ :proporcionDeAguaTotal | proporcionDeAguaTotal  proporcionDeAgua ])		/ topografias size! !!Mixta methodsFor: 'accessing' stamp: 'Anonymous 6/22/2020 16:57'!proporcionDeTierra	"Suma las proporciones de tierra de todas sus topografias y las divide por la cantidad de topografias que la forman (4 de momento)"	^ (topografiassum:			[ :proporcionDeTierraTotal | proporcionDeTierraTotal  proporcionDeTierra ])		/ topografias size! !!Mixta methodsFor: 'accessing' stamp: 'Anonymous 6/22/2020 16:58'!initialize: vectorDeTopografias	super initialize. 	topografias := vectorDeTopografias! !!Mixta methodsFor: 'accessing' stamp: 'Anonymous 5/27/2020 17:53'!topografias	^ topografias! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mixta class	instanceVariableNames: ''!!Mixta class methodsFor: 'instance creation' stamp: 'Anonymous 5/27/2020 18:17'!crearConTop1: topografia1 Top2: topografia2 Top3: topografia3 Top4: topografia4	| array |	array := Array new: 4.	array at: 1 put: topografia1.	array at: 2 put: topografia2.	array at: 3 put: topografia3.	array at: 4 put: topografia4.	^ Mixta new initialize: array! !Topografia subclass: #Tierra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer3-Topografia-Model'!!Tierra methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 18:01'!esIgualA: unaTopografia	^ unaTopografia esIgualATierra! !!Tierra methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 18:01'!proporcionDeTierra	^ 1! !!Tierra methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 18:01'!proporcionDeAgua	^ 0! !!Tierra methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/27/2020 18:02'!esIgualATierra	^ true! !