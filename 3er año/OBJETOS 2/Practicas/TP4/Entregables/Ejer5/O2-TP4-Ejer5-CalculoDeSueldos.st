TestCase subclass: #EmpleadoTest	instanceVariableNames: 'temporarioSolteroYSinHijos temporarioCasadoYCon1Hijo pasanteSinExames pasanteConExames plantaSolteroSinHijosY10DeAntiguedad plantaCasadoCon2HijosY10DeAntiguedad'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer5-CalculoDeSueldos-Test'!!EmpleadoTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:38'!testSueldoAdicional	self assert: temporarioSolteroYSinHijos sueldoAdicional equals: 0.	self assert: temporarioCasadoYCon1Hijo sueldoAdicional equals: 600.	self assert: pasanteConExames sueldoAdicional equals: 500.	self assert: pasanteSinExames sueldoAdicional equals: 0.	self		assert: plantaSolteroSinHijosY10DeAntiguedad sueldoAdicional		equals: 1000.	self		assert: plantaCasadoCon2HijosY10DeAntiguedad sueldoAdicional		equals: 1700! !!EmpleadoTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:38'!testDescuento	self assert: temporarioSolteroYSinHijos descuento equals: 650.	self assert: temporarioCasadoYCon1Hijo descuento equals: 680.	self assert: pasanteConExames descuento equals: 285.	self assert: pasanteSinExames descuento equals: 260.	self		assert: plantaSolteroSinHijosY10DeAntiguedad descuento		equals: 440.	self		assert: plantaCasadoCon2HijosY10DeAntiguedad descuento		equals: 475! !!EmpleadoTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:38'!testSueldo	self assert: temporarioSolteroYSinHijos sueldo equals: 4350.	self assert: temporarioCasadoYCon1Hijo sueldo equals: 4920.	self assert: pasanteConExames sueldo equals: 2215.	self assert: pasanteSinExames sueldo equals: 1740.	self assert: plantaSolteroSinHijosY10DeAntiguedad sueldo equals: 3560.	self assert: plantaCasadoCon2HijosY10DeAntiguedad sueldo equals: 4225! !!EmpleadoTest methodsFor: 'tests' stamp: 'Anonymous 6/9/2020 20:38'!testSueldoBasico	self assert: temporarioSolteroYSinHijos sueldoBasico equals: 5000.	self assert: temporarioCasadoYCon1Hijo sueldoBasico equals: 5000.	self assert: pasanteConExames sueldoBasico equals: 2000.	self assert: pasanteSinExames sueldoBasico equals: 2000.	self		assert: plantaSolteroSinHijosY10DeAntiguedad sueldoBasico		equals: 3000.	self		assert: plantaCasadoCon2HijosY10DeAntiguedad sueldoBasico		equals: 3000! !!EmpleadoTest methodsFor: 'running' stamp: 'Anonymous 7/17/2020 11:32'!setUp	"Empleado temporario soltero, sin hijos y con 100 horas de trabajo"	temporarioSolteroYSinHijos := Temporario		crearEmpleadoConNombre: 'Temporario1'		SiEsCasado: false		CantDeHijos: 0		YHorasDeTrabajo: 100.	"Empleado temporario casado, con 1 hijo y con 100 horas de trabajo"	temporarioCasadoYCon1Hijo := Temporario		crearEmpleadoConNombre: 'Temporario2'		SiEsCasado: true		CantDeHijos: 1		YHorasDeTrabajo: 100.	"Empleado pasante sin examenes rendidos"	pasanteSinExames := Pasante		crearEmpleadoConNombre: 'Pasante1'		SiEsCasado: false		CantDeHijos: 0		YCantExamenesRendidos: 0.	"Empleado pasante con examenes rendidos"	pasanteConExames := Pasante		crearEmpleadoConNombre: 'Pasante2'		SiEsCasado: true		CantDeHijos: 1		YCantExamenesRendidos: 5.	"Empleado planta soltero, sin hijos y con 10 años de antiguedad"	plantaSolteroSinHijosY10DeAntiguedad := Planta		crearEmpleadoConNombre: 'Planta1'		SiEsCasado: false		CantDeHijos: 0		YAntiguedad: 10.	"Empleado planta casado, con 2 hijos y con 10 años de antiguedad"	plantaCasadoCon2HijosY10DeAntiguedad := Planta		crearEmpleadoConNombre: 'Planta2'		SiEsCasado: true		CantDeHijos: 2		YAntiguedad: 10! !Object subclass: #Empleado	instanceVariableNames: 'nombre esCasado cantHijos'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer5-CalculoDeSueldos-Model'!!Empleado methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 18:01'!esCasado^esCasado ! !!Empleado methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 18:01'!cantHijos^cantHijos ! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:05'!descuentoBasico	^ self sueldoBasico * self porcentajeDeDescuentoBasico ! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:05'!descuentoAdicional	^ self sueldoAdicional * self porcentajeDeDescuentoAdicional ! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 11:57'!sueldoAdicional	self subclassResponsibility! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:05'!porcentajeDeDescuentoBasico^ 0.13! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:05'!porcentajeDeDescuentoAdicional	^ 0.05! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:00'!precioPorHoraDeTrabajo ^ 10! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/23/2020 18:32'!descuento	^ self descuentoBasico  + self descuentoAdicional ! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/31/2020 17:39'!nombre: unNombre esCasado: unBooleano cantHijos: unaCantidadnombre := unNombre.esCasado := unBooleano .cantHijos := unaCantidad ! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/1/2020 09:06'!sueldo^ self sueldoBasico + self sueldoAdicional - self descuento ! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/20/2020 17:26'!sueldoBasico	self subclassResponsibility! !!Empleado methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 11:56'!adicionalFamiliar	| suma |	suma := 0.	self esCasado		ifTrue: [ suma := suma + 500 ].	self cantHijos > 0		ifTrue: [ suma := suma + (self cantHijos * 100) ].	^ suma! !Empleado subclass: #Pasante	instanceVariableNames: 'cantExamenesRendidos'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer5-CalculoDeSueldos-Model'!!Pasante methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/31/2020 17:58'!sueldoBasico	^ 2000! !!Pasante methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/1/2020 08:51'!sueldoAdicional self cantExamenesRendidos > 0ifTrue: [ ^self cantExamenesRendidos * 100 ]ifFalse: [ ^0 ]! !!Pasante methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 17:40'!cantExamenesRendidos: unaCantidadcantExamenesRendidos := unaCantidad ! !!Pasante methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 17:52'!agregarExamenRendido: unaCantidad	cantExamenesRendidos := cantExamenesRendidos + unaCantidad! !!Pasante methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 17:52'!cantExamenesRendidos	^cantExamenesRendidos ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pasante class	instanceVariableNames: ''!!Pasante class methodsFor: 'as yet unclassified' stamp: 'Anonymous 7/17/2020 11:31'!crearEmpleadoConNombre: unNombre SiEsCasado: unBooleano CantDeHijos: unaCantidad YCantExamenesRendidos: otraCantidad	^ self new		nombre: unNombre esCasado: unBooleano cantHijos: unaCantidad;		cantExamenesRendidos: otraCantidad;		yourself! !Empleado subclass: #Planta	instanceVariableNames: 'antiguedad'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer5-CalculoDeSueldos-Model'!!Planta methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 17:40'!antiguedad: unaCantidadantiguedad := unaCantidad ! !!Planta methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 18:01'!antiguedad^antiguedad ! !!Planta methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/31/2020 17:58'!sueldoBasico^3000! !!Planta methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 17:56'!sueldoAdicional	| suma |	suma := self adicionalFamiliar.	self antiguedad > 0		ifTrue: [ suma := suma + (self antiguedad * 100) ].	^ suma! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Planta class	instanceVariableNames: ''!!Planta class methodsFor: 'as yet unclassified' stamp: 'Anonymous 7/17/2020 11:32'!crearEmpleadoConNombre: unNombre SiEsCasado: unBooleano CantDeHijos: unaCantidad YAntiguedad: otraCantidad	^ self new		nombre: unNombre esCasado: unBooleano cantHijos: unaCantidad;		antiguedad: otraCantidad;		yourself! !Empleado subclass: #Temporario	instanceVariableNames: 'horasDeTrabajo'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-TP4-Ejer5-CalculoDeSueldos-Model'!!Temporario methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:00'!sueldoBasico	^ 4000 + (self horasDeTrabajo * self precioPorHoraDeTrabajo)! !!Temporario methodsFor: 'as yet unclassified' stamp: 'Anonymous 6/25/2020 12:03'!sueldoAdicional	^ self adicionalFamiliar! !!Temporario methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 17:40'!horasDeTrabajo: unaCantidadhorasDeTrabajo := unaCantidad ! !!Temporario methodsFor: 'accessing' stamp: 'Anonymous 5/31/2020 17:59'!horasDeTrabajo^horasDeTrabajo ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Temporario class	instanceVariableNames: ''!!Temporario class methodsFor: 'as yet unclassified' stamp: 'Anonymous 7/17/2020 11:32'!crearEmpleadoConNombre: unNombre SiEsCasado: unBooleano CantDeHijos: unaCantidad YHorasDeTrabajo: otraCantidad	^ self new		nombre: unNombre esCasado: unBooleano cantHijos: unaCantidad;		horasDeTrabajo: otraCantidad;		yourself! !