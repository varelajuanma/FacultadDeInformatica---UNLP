Object subclass: #Student	instanceVariableNames: 'name age'	classVariableNames: ''	poolDictionaries: ''	category: 'Study group-model'!!Student methodsFor: 'accessing' stamp: 'Casco 3/27/2020 18:15'!age	^ age! !!Student methodsFor: 'accessing' stamp: 'Casco 3/27/2020 18:15'!name	^ name! !!Student methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:44'!age: aNumber	age := aNumber! !!Student methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:44'!name: aString	name := aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Student class	instanceVariableNames: ''!!Student class methodsFor: 'instance creation' stamp: 'Casco 3/27/2020 18:52'!named: aName age: aNumber	^ self new		name: aName;		age: aNumber;		yourself! !Object subclass: #StudyGroup	instanceVariableNames: 'students'	classVariableNames: ''	poolDictionaries: ''	category: 'Study group-model'!!StudyGroup methodsFor: 'initialization' stamp: 'Casco 3/27/2020 18:38'!initialize	students := OrderedCollection new! !!StudyGroup methodsFor: 'accessing' stamp: 'Casco 3/27/2020 18:17'!addStudent: aStudent	students add: aStudent! !!StudyGroup methodsFor: 'accessing' stamp: 'Casco 3/27/2020 18:18'!ageAverage	^ (students collect: [ :each | each age ]) average! !!StudyGroup methodsFor: 'accessing' stamp: 'Casco 3/27/2020 18:15'!students	^ students! !WAComponent subclass: #StudentEditorComponent	instanceVariableNames: 'student newName newAge'	classVariableNames: ''	poolDictionaries: ''	category: 'Study group-ui'!!StudentEditorComponent methodsFor: 'callbacks' stamp: 'Casco 3/27/2020 19:40'!accept	student name: newName.	student age: newAge asNumber.	self answer.	! !!StudentEditorComponent methodsFor: 'callbacks' stamp: 'Casco 3/27/2020 19:40'!cancel	student := nil. 	self answer.	! !!StudentEditorComponent methodsFor: 'rendering' stamp: 'Casco 3/27/2020 20:20'!renderContentOn: aCanvas	aCanvas		form: [ aCanvas				paragraph: [ aCanvas label: 'Nombre: '.					aCanvas textInput on: #newName of: self ].			aCanvas				paragraph: [ aCanvas label: 'Edad: '.					aCanvas textInput on: #newAge of: self ].			aCanvas button				callback: [ self accept ];				with: 'Guardar'.			aCanvas space.			aCanvas button				callback: [ self cancel ];				with: 'Cancelar' ]! !!StudentEditorComponent methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:43'!newAge: aString	newAge := aString ! !!StudentEditorComponent methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:45'!student: aStudent	student := aStudent.	newName := aStudent name.	newAge := aStudent age! !!StudentEditorComponent methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:37'!newName	^ newName! !!StudentEditorComponent methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:43'!newName: aString	newName := aString! !!StudentEditorComponent methodsFor: 'accessing' stamp: 'Casco 3/27/2020 19:37'!newAge	^ newAge! !!StudentEditorComponent methodsFor: 'accessing' stamp: 'Casco 3/27/2020 18:57'!student	^ student! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!StudentEditorComponent class	instanceVariableNames: ''!!StudentEditorComponent class methodsFor: 'instance creation' stamp: 'Casco 3/27/2020 19:09'!student: aStudent	^ self new		student: aStudent;		yourself! !WAComponent subclass: #StudyGroupComponent	instanceVariableNames: 'group'	classVariableNames: ''	poolDictionaries: ''	category: 'Study group-ui'!!StudyGroupComponent commentStamp: 'Casco 3/27/2020 18:49' prior: 0!WAAdmin register: StudyGroupComponent asApplicationAt: 'students'!!StudyGroupComponent methodsFor: 'callbacks' stamp: 'Casco 3/27/2020 19:50'!edit: aStudent	self call: (StudentEditorComponent student: aStudent)! !!StudyGroupComponent methodsFor: 'callbacks' stamp: 'Casco 3/27/2020 19:41'!newStudent	| editor |	editor := StudentEditorComponent student: Student new.	self call: editor.	editor student ifNotNil: [ group addStudent: editor student ]! !!StudyGroupComponent methodsFor: 'rendering' stamp: 'Casco 3/27/2020 20:46'!renderContentOn: aCanvas	aCanvas		unorderedList: [ group students				do: [ :each | 					aCanvas listItem: [ aCanvas anchor								callback: [ self edit: each ];								with: each name ] ] ].	aCanvas anchor		callback: [ self newStudent ];		with: [ aCanvas button: 'Add' ]! !!StudyGroupComponent methodsFor: 'initialization' stamp: 'Casco 3/27/2020 18:37'!initialize	super initialize.	group := StudyGroup new! !